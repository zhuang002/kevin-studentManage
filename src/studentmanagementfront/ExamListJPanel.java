/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package studentmanagementfront;

import java.util.ArrayList;
import javax.swing.DefaultListModel;
import studentmanagementbackend.Database;
import studentmanagementbackend.Exam;

/**
 *
 * @author zhuan
 */
public class ExamListJPanel extends ContentJPanel {

    /**
     * Creates new form ExamListJPanel
     */
    public ExamListJPanel() {
        initComponents();
        this.examJPanel1.setState(PanelState.Initial);
        this.examJPanel1.setParentPanel(this);
        loadExams();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSplitPane1 = new javax.swing.JSplitPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        jListExam = new javax.swing.JList<>();
        examJPanel1 = new studentmanagementfront.ExamJPanel();

        jSplitPane1.setDividerLocation(200);

        jListExam.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jListExamMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jListExam);

        jSplitPane1.setLeftComponent(jScrollPane1);
        jSplitPane1.setRightComponent(examJPanel1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jSplitPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 708, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSplitPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 363, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jListExamMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jListExamMouseClicked
        // TODO add your handling code here:
        onSelected();
    }//GEN-LAST:event_jListExamMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private studentmanagementfront.ExamJPanel examJPanel1;
    private javax.swing.JList<String> jListExam;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSplitPane jSplitPane1;
    // End of variables declaration//GEN-END:variables

    private void loadExams() {
        ArrayList<Exam> exams=Database.getAllExams();
        DefaultListModel model=new DefaultListModel();
        model.addAll(exams);
        this.jListExam.setModel(model);
    }

    void actionCompleted(Action action, Exam exam) {
        if (null!=action) switch (action) {
            case Save:{
                this.loadExams();
                int idx=((DefaultListModel)this.jListExam.getModel()).indexOf(exam);
                this.jListExam.setSelectedIndex(idx);
                this.onSelected();
                    break;
                }
            case Cancel:
                onSelected();
                break;
            case Delete:{
                int idx=this.jListExam.getSelectedIndex();
                if (idx<0) return;
                DefaultListModel model=(DefaultListModel)this.jListExam.getModel();
                Exam ex=(Exam)model.get(idx);
                ex.delete();
                loadExams();
                this.examJPanel1.setState(PanelState.Initial);
                    break;
                }
            default:
                break;
        } 
    }

    private void onSelected() {
        int idx=this.jListExam.getSelectedIndex();
        if (idx<0) {
            this.examJPanel1.setState(PanelState.Initial);
            this.examJPanel1.clearAll();
            return;
        }
        Exam exam=(Exam)((DefaultListModel)this.jListExam.getModel()).get(idx);
        this.examJPanel1.setData(exam);
        this.examJPanel1.setState(PanelState.InView);
    }
}
